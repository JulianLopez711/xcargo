name: Deploy Frontend to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Desplegar Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install dependencies and build
        working-directory: frontend
        run: |
          # Limpiar caché de npm si existe
          npm cache clean --force || true
          
          # Instalar dependencias
          npm install
          
          # Verificar que todas las dependencias estén instaladas
          npm list --depth=0 || echo "Algunas dependencias pueden tener conflictos menores"
          
          # Ejecutar build
          npm run build
          
          # Verificar que el build se completó correctamente
          if [ ! -d "dist" ]; then
            echo "❌ Error: El directorio dist no fue creado"
            exit 1
          fi
          
          echo "✅ Build completado exitosamente"
          ls -la dist/

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: "${{ secrets.VPS_PRIVATE_KEY }}"

      - name: Deploy to VPS via SSH
        env:
          SSH_USER: devxcargo
          SSH_HOST: 72.167.223.67
          DEPLOY_PATH: /home/devxcargo/xcargo
        run: |
          # Instalar netcat si no está disponible
          if ! command -v nc &> /dev/null; then
            echo "Instalando netcat..."
            sudo apt-get update && sudo apt-get install -y netcat-openbsd
          fi

          # Añadir el host a known_hosts
          echo "Configurando SSH..."
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts 2>/dev/null

          # Verificar conectividad SSH
          echo "Verificando conectividad SSH..."
          for i in {1..12}; do
            if nc -z $SSH_HOST 22; then
              echo "✅ Conexión SSH establecida"
              break
            fi
            echo "⏳ Esperando conexión SSH... (intento $i/12)"
            sleep 5
            if [ $i -eq 12 ]; then
              echo "❌ Error: No se pudo establecer conexión SSH"
              exit 1
            fi
          done

          # Verificar que el directorio dist existe
          if [ ! -d "frontend/dist" ]; then
            echo "❌ Error: El directorio frontend/dist no existe"
            exit 1
          fi

          # Crear estructura de directorios en el servidor
          echo "Preparando directorios en el servidor..."
          ssh $SSH_USER@$SSH_HOST -o StrictHostKeyChecking=no "
            mkdir -p $DEPLOY_PATH/frontend/temp &&
            echo '✅ Directorios creados correctamente'
          " || {
            echo "❌ Error: No se pudieron crear los directorios"
            exit 1
          }

          # Transferir archivos
          echo "Transfiriendo archivos..."
          scp -r -o StrictHostKeyChecking=no frontend/dist/* $SSH_USER@$SSH_HOST:$DEPLOY_PATH/frontend/temp/ || {
            echo "❌ Error: Falló la transferencia de archivos"
            exit 1
          }

          # Realizar el despliegue atómico
          echo "Realizando despliegue..."
          ssh $SSH_USER@$SSH_HOST -o StrictHostKeyChecking=no "
            cd $DEPLOY_PATH &&
            # Backup del directorio actual si existe
            if [ -d frontend/dist ]; then
              echo 'Creando backup...' &&
              mv frontend/dist frontend/dist_backup_\$(date +%Y%m%d_%H%M%S)
            fi &&
            # Mover los nuevos archivos
            echo 'Moviendo nuevos archivos...' &&
            mv frontend/temp frontend/dist &&
            # Limpiar backups antiguos (mantener solo los 3 más recientes)
            ls -dt frontend/dist_backup_* 2>/dev/null | tail -n +4 | xargs rm -rf 2>/dev/null || true &&
            # Recargar nginx
            echo 'Recargando nginx...' &&
            sudo systemctl reload nginx &&
            echo '✅ Despliegue completado exitosamente'
          " || {
            echo "❌ Error durante el despliegue"
            # Intentar restaurar backup si existe
            ssh $SSH_USER@$SSH_HOST "
              if [ -d $DEPLOY_PATH/frontend/dist_backup_* ]; then
                echo 'Restaurando backup...'
                rm -rf $DEPLOY_PATH/frontend/dist 2>/dev/null || true
                mv \$(ls -dt $DEPLOY_PATH/frontend/dist_backup_* | head -n1) $DEPLOY_PATH/frontend/dist
                sudo systemctl reload nginx
                echo '✅ Backup restaurado'
              fi
            "
            exit 1
          }

          echo "🚀 Frontend desplegado exitosamente en $SSH_HOST"